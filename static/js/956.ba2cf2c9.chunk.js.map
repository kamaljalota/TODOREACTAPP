{"version":3,"file":"static/js/956.ba2cf2c9.chunk.js","mappings":"mLAEe,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAO,KAACC,EAAO,KACtB,GAA+BF,EAAAA,EAAAA,UAAS,IAAG,eAApCG,EAAQ,KAACC,EAAW,KAC3B,GAAiCJ,EAAAA,EAAAA,UAAS,IAAG,eAAtCK,EAAS,KAACC,EAAY,KACvBC,EAAS,SAACC,GACQ,MAAnBA,EAAEC,OAAOC,OAAiBT,EAAQU,SAAS,OAGlDT,EAAQD,EAAUO,EAAEC,OAAOC,OAC3BE,QAAQC,IAAIZ,GACV,EAQMa,EAAkB,SAACN,GACR,KAAZP,IAEDG,EAAYH,GACZK,EAAaE,EAAEC,OAAOC,OACtBR,EAAQ,IAIZ,EAyBA,OACE,iBAAKa,UAAU,wBAAyBC,MAAO,CAAC,aAAc,UAAW,WACvE,wBAAI,gBACJ,0BACA,qBAAUC,KAAO,IAAIC,KAAO,KAAKC,KAAO,cAAcC,KAAK,OAAOV,MAAOT,OAEzE,mBAAOe,MAAO,CACZ,OAAS,SACT,OAAU,mBAAoB,WAEpC,2BACA,yBAAI,mBAAQK,QAASd,EAAUG,MAAO,EAAE,SAAC,SACzC,yBAAI,mBAAQW,QAASd,EAAUG,MAAO,EAAE,SAAC,SACzC,yBAAI,mBAAQW,QAASd,EAAUG,MAAO,EAAE,SAAC,SACzC,0BAAI,KAAC,mBAAQW,QAASd,EAAUG,MAAO,EAAE,SAAC,UAC1C,0BAAI,KAAC,mBAAQW,QAASd,EAAUG,MAAO,EAAE,SAAC,aAG1C,2BACA,0BAAI,KAAC,mBAAQW,QAASd,EAAUG,MAAO,EAAE,SAAC,UAE1C,yBAAI,mBAAQW,QAASd,EAAUG,MAAO,EAAE,SAAC,SACzC,yBAAI,mBAAQW,QAASd,EAAUG,MAAO,EAAE,SAAC,SACzC,0BAAI,KAAC,mBAAQW,QAASd,EAAUG,MAAO,EAAE,SAAC,UAC1C,0BAAI,KAAC,mBAAQW,QAASd,EAAUG,MAAO,EAAE,SAAC,aAG3C,2BACC,0BAAI,KAAC,mBAAQW,QAASP,EAAmBJ,MAAO,IAAI,SAAC,UAErD,yBAAI,mBAAQW,QAASP,EAAmBJ,MAAO,IAAI,SAAC,SACpD,yBAAI,mBAAQW,QAASP,EAAmBJ,MAAO,IAAI,SAAC,SACpD,yBAAI,mBAAQW,QAASP,EAAmBJ,MAAO,IAAI,SAAC,SACpD,0BAAI,KAAC,mBAAQW,QAASd,EAAUG,MAAO,IAAI,SAAC,aAG7C,2BACC,gBAAIY,QAAQ,IAAG,UAAC,KAAC,mBAAQD,QA9EP,WAChB,IAAIE,EAAItB,EAAQuB,WAChBtB,EAAQqB,EAAEE,MAAM,GAAG,GACrB,EA2E8C,SAAE,YAEhD,eAAIH,QAAQ,IAAG,UAAC,mBAAQD,QA5EP,WACfnB,EAAQ,GACV,EA0E4C,SAAE,aAC9C,eAAIoB,QAAQ,IAAG,UAAC,mBAAQD,QAhEJ,WAClB,IAAIK,EAEJ,OAAOrB,GACL,IAAK,IACFqB,EAAMC,WAAWxB,GAAYwB,WAAW1B,GACzCC,EAAQwB,GACR,MACA,IAAK,IACHA,EAAMC,WAAWxB,GAAYwB,WAAW1B,GACzCC,EAAQwB,GACR,MACA,IAAK,IACJA,EAAMC,WAAWxB,GAAYwB,WAAW1B,GACzCC,EAAQwB,GACR,MACA,IAAK,IACJA,EAAMC,WAAWxB,GAAYwB,WAAW1B,GACzCC,EAAQwB,GACR,MACH,QAAQ,OAGZ,EAyCgDhB,MAAO,IAAI,SAAC,gBAO9D,C","sources":["components/About.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function About() {\r\n  const [current,setName] = useState(\"\");\r\n  const [previous,setPrevious] = useState(\"\");\r\n  const [operation,setOperation] = useState(\"\");\r\n  const getValue=(e)=>{\r\n    if(e.target.value === '.' && current.includes('.')){\r\n      return;\r\n    }\r\nsetName(current + e.target.value);\r\nconsole.log(current);\r\n  }\r\n  const deleteValue=()=>{\r\n    let c = current.toString();\r\n    setName(c.slice(0,-1));\r\n  }\r\n  const clearValue=()=>{\r\n    setName(\"\");\r\n  }\r\n  const getOperationValue=(e)=>{\r\n    if(current === \"\"){return;} \r\n    else{\r\n      setPrevious(current);\r\n      setOperation(e.target.value);\r\n      setName(\"\");\r\n  \r\n    } \r\n   \r\n  }\r\n  const getFinalValue=()=>{\r\n    let val;\r\n    //setName(val);\r\n    switch(operation) {\r\n      case '+':\r\n         val = parseFloat(previous) + parseFloat(current);\r\n        setName(val);\r\n        break;\r\n        case '-':\r\n          val = parseFloat(previous) - parseFloat(current);\r\n         setName(val);\r\n         break;\r\n         case '*':\r\n          val = parseFloat(previous) * parseFloat(current);\r\n         setName(val);\r\n         break;\r\n         case '/':\r\n          val = parseFloat(previous) / parseFloat(current);\r\n         setName(val);\r\n         break;\r\n      default:return;\r\n        // code block\r\n    }\r\n  }\r\n  return (\r\n    <div className='container  my-4 row-2'  style={{\"text-align\": \"center\" }}>\r\n      <h2>CALCULATOR</h2>\r\n      <div>\r\n      <textarea rows = \"1\" cols = \"19\" name = \"description\" type=\"text\" value={current}/></div>\r\n    \r\n      <table style={{ \r\n        \"margin\":\"0 auto\",      \r\n        \"border\": \"solid 1px black\" }}>\r\n  \r\n  <tr>\r\n  <td><button onClick={getValue} value={0}>0</button></td>\r\n  <td><button onClick={getValue} value={1}>1</button></td>\r\n  <td><button onClick={getValue} value={2}>2</button></td>\r\n  <td> <button onClick={getValue} value={3}>3</button></td>\r\n  <td> <button onClick={getValue} value={4}>4</button></td>\r\n  \r\n  </tr>\r\n  <tr>\r\n  <td> <button onClick={getValue} value={5}>5</button></td>\r\n \r\n  <td><button onClick={getValue} value={6}>6</button></td>\r\n  <td><button onClick={getValue} value={7}>7</button></td>\r\n  <td> <button onClick={getValue} value={8}>8</button></td>\r\n  <td> <button onClick={getValue} value={9}>9</button></td>\r\n  \r\n </tr>\r\n <tr>\r\n  <td> <button onClick={getOperationValue} value={'/'}>/</button></td>\r\n \r\n  <td><button onClick={getOperationValue} value={'+'}>+</button></td>\r\n  <td><button onClick={getOperationValue} value={'-'}>-</button></td>\r\n  <td><button onClick={getOperationValue} value={'*'}>*</button></td>\r\n  <td> <button onClick={getValue} value={'.'}>.</button></td>\r\n  \r\n </tr>\r\n <tr>\r\n  <td colspan=\"2\"> <button onClick={deleteValue} >DEL</button></td>\r\n \r\n  <td colspan=\"2\"><button onClick={clearValue} >CLEAR</button></td>\r\n  <td colspan=\"1\"><button onClick={getFinalValue} value={'='}>=</button></td>\r\n\r\n  \r\n </tr>\r\n       </table>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["About","useState","current","setName","previous","setPrevious","operation","setOperation","getValue","e","target","value","includes","console","log","getOperationValue","className","style","rows","cols","name","type","onClick","colspan","c","toString","slice","val","parseFloat"],"sourceRoot":""}